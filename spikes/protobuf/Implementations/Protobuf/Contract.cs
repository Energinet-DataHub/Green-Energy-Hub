// Copyright 2020 Energinet DataHub A/S
//
// Licensed under the Apache License, Version 2.0 (the "License2");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SpikeProtobuf.Implementations.Protobuf {

  /// <summary>Holder for reflection information generated from contract.proto</summary>
  public static partial class ContractReflection {

    #region Descriptor
    /// <summary>File descriptor for contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5jb250cmFjdC5wcm90bxIZZ3JlZW5lbmVyZ3lodWIudGltZXNlcmllcxof",
            "Z29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKQBgoKVGltZXNlcmll",
            "cxIVCg1UcmFuc2FjdGlvbklkGAEgASgJEhAKCEZ1bmN0aW9uGAIgASgJEkcK",
            "EU9ic2VydmF0aW9uUGVyaW9kGAMgASgLMiwuZ3JlZW5lbmVyZ3lodWIudGlt",
            "ZXNlcmllcy5UaW1lc2VyaWVzLlBlcmlvZBJCCgdQcm9kdWN0GAQgASgLMjEu",
            "Z3JlZW5lbmVyZ3lodWIudGltZXNlcmllcy5UaW1lc2VyaWVzLlByb2R1Y3RU",
            "eXBlEncKG01ldGVyaW5nUG9pbnRDaGFyYWN0ZXJpc3RpYxgFIAEoCzJSLmdy",
            "ZWVuZW5lcmd5aHViLnRpbWVzZXJpZXMuVGltZXNlcmllcy5EZXRhaWxNZWFz",
            "dXJlbWVudE1ldGVyaW5nUG9pbnRDaGFyYWN0ZXJpc3RpYxIjChtNZXRlcmlu",
            "Z1BvaW50RG9tYWluTG9jYXRpb24YBiABKAkSRwoMT2JzZXJ2YXRpb25zGAcg",
            "AygLMjEuZ3JlZW5lbmVyZ3lodWIudGltZXNlcmllcy5UaW1lc2VyaWVzLk9i",
            "c2VydmF0aW9uGnAKBlBlcmlvZBISCgpSZXNvbHV0aW9uGAEgASgJEikKBVN0",
            "YXJ0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBInCgNFbmQY",
            "AyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGjcKC1Byb2R1Y3RU",
            "eXBlEhYKDklkZW50aWZpY2F0aW9uGAEgASgJEhAKCFVuaXRUeXBlGAIgASgJ",
            "GmUKLERldGFpbE1lYXN1cmVtZW50TWV0ZXJpbmdQb2ludENoYXJhY3Rlcmlz",
            "dGljEhsKE1R5cGVPZk1ldGVyaW5nUG9pbnQYASABKAkSGAoQU2V0dGxlbWVu",
            "dE1ldGhvZBgCIAEoCRpTCgtPYnNlcnZhdGlvbhIQCghQb3NpdGlvbhgBIAEo",
            "BRIQCghRdWFudGl0eRgCIAEoARIPCgdNaXNzaW5nGAMgASgIEg8KB1F1YWxp",
            "dHkYBCABKAkiTAoUVGltZXNlcmllc0NvbGxlY3Rpb24SNAoFSXRlbXMYASAD",
            "KAsyJS5ncmVlbmVuZXJneWh1Yi50aW1lc2VyaWVzLlRpbWVzZXJpZXNCKaoC",
            "JlNwaWtlUHJvdG9idWYuSW1wbGVtZW50YXRpb25zLlByb3RvYnVmYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SpikeProtobuf.Implementations.Protobuf.Timeseries), global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Parser, new[]{ "TransactionId", "Function", "ObservationPeriod", "Product", "MeteringPointCharacteristic", "MeteringPointDomainLocation", "Observations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Period), global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Period.Parser, new[]{ "Resolution", "Start", "End" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.ProductType), global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.ProductType.Parser, new[]{ "Identification", "UnitType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.DetailMeasurementMeteringPointCharacteristic), global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.DetailMeasurementMeteringPointCharacteristic.Parser, new[]{ "TypeOfMeteringPoint", "SettlementMethod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Observation), global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Observation.Parser, new[]{ "Position", "Quantity", "Missing", "Quality" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpikeProtobuf.Implementations.Protobuf.TimeseriesCollection), global::SpikeProtobuf.Implementations.Protobuf.TimeseriesCollection.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Timeseries : pb::IMessage<Timeseries>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Timeseries> _parser = new pb::MessageParser<Timeseries>(() => new Timeseries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Timeseries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpikeProtobuf.Implementations.Protobuf.ContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timeseries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timeseries(Timeseries other) : this() {
      transactionId_ = other.transactionId_;
      function_ = other.function_;
      observationPeriod_ = other.observationPeriod_ != null ? other.observationPeriod_.Clone() : null;
      product_ = other.product_ != null ? other.product_.Clone() : null;
      meteringPointCharacteristic_ = other.meteringPointCharacteristic_ != null ? other.meteringPointCharacteristic_.Clone() : null;
      meteringPointDomainLocation_ = other.meteringPointDomainLocation_;
      observations_ = other.observations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timeseries Clone() {
      return new Timeseries(this);
    }

    /// <summary>Field number for the "TransactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private string transactionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Function" field.</summary>
    public const int FunctionFieldNumber = 2;
    private string function_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Function {
      get { return function_; }
      set {
        function_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObservationPeriod" field.</summary>
    public const int ObservationPeriodFieldNumber = 3;
    private global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Period observationPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Period ObservationPeriod {
      get { return observationPeriod_; }
      set {
        observationPeriod_ = value;
      }
    }

    /// <summary>Field number for the "Product" field.</summary>
    public const int ProductFieldNumber = 4;
    private global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.ProductType product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.ProductType Product {
      get { return product_; }
      set {
        product_ = value;
      }
    }

    /// <summary>Field number for the "MeteringPointCharacteristic" field.</summary>
    public const int MeteringPointCharacteristicFieldNumber = 5;
    private global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.DetailMeasurementMeteringPointCharacteristic meteringPointCharacteristic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.DetailMeasurementMeteringPointCharacteristic MeteringPointCharacteristic {
      get { return meteringPointCharacteristic_; }
      set {
        meteringPointCharacteristic_ = value;
      }
    }

    /// <summary>Field number for the "MeteringPointDomainLocation" field.</summary>
    public const int MeteringPointDomainLocationFieldNumber = 6;
    private string meteringPointDomainLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MeteringPointDomainLocation {
      get { return meteringPointDomainLocation_; }
      set {
        meteringPointDomainLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Observations" field.</summary>
    public const int ObservationsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Observation> _repeated_observations_codec
        = pb::FieldCodec.ForMessage(58, global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Observation.Parser);
    private readonly pbc::RepeatedField<global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Observation> observations_ = new pbc::RepeatedField<global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Observation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Observation> Observations {
      get { return observations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Timeseries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Timeseries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (Function != other.Function) return false;
      if (!object.Equals(ObservationPeriod, other.ObservationPeriod)) return false;
      if (!object.Equals(Product, other.Product)) return false;
      if (!object.Equals(MeteringPointCharacteristic, other.MeteringPointCharacteristic)) return false;
      if (MeteringPointDomainLocation != other.MeteringPointDomainLocation) return false;
      if(!observations_.Equals(other.observations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (Function.Length != 0) hash ^= Function.GetHashCode();
      if (observationPeriod_ != null) hash ^= ObservationPeriod.GetHashCode();
      if (product_ != null) hash ^= Product.GetHashCode();
      if (meteringPointCharacteristic_ != null) hash ^= MeteringPointCharacteristic.GetHashCode();
      if (MeteringPointDomainLocation.Length != 0) hash ^= MeteringPointDomainLocation.GetHashCode();
      hash ^= observations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (Function.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Function);
      }
      if (observationPeriod_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObservationPeriod);
      }
      if (product_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Product);
      }
      if (meteringPointCharacteristic_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MeteringPointCharacteristic);
      }
      if (MeteringPointDomainLocation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MeteringPointDomainLocation);
      }
      observations_.WriteTo(output, _repeated_observations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (Function.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Function);
      }
      if (observationPeriod_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObservationPeriod);
      }
      if (product_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Product);
      }
      if (meteringPointCharacteristic_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MeteringPointCharacteristic);
      }
      if (MeteringPointDomainLocation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MeteringPointDomainLocation);
      }
      observations_.WriteTo(ref output, _repeated_observations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (Function.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Function);
      }
      if (observationPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObservationPeriod);
      }
      if (product_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Product);
      }
      if (meteringPointCharacteristic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeteringPointCharacteristic);
      }
      if (MeteringPointDomainLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MeteringPointDomainLocation);
      }
      size += observations_.CalculateSize(_repeated_observations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Timeseries other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.Function.Length != 0) {
        Function = other.Function;
      }
      if (other.observationPeriod_ != null) {
        if (observationPeriod_ == null) {
          ObservationPeriod = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Period();
        }
        ObservationPeriod.MergeFrom(other.ObservationPeriod);
      }
      if (other.product_ != null) {
        if (product_ == null) {
          Product = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.ProductType();
        }
        Product.MergeFrom(other.Product);
      }
      if (other.meteringPointCharacteristic_ != null) {
        if (meteringPointCharacteristic_ == null) {
          MeteringPointCharacteristic = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.DetailMeasurementMeteringPointCharacteristic();
        }
        MeteringPointCharacteristic.MergeFrom(other.MeteringPointCharacteristic);
      }
      if (other.MeteringPointDomainLocation.Length != 0) {
        MeteringPointDomainLocation = other.MeteringPointDomainLocation;
      }
      observations_.Add(other.observations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 18: {
            Function = input.ReadString();
            break;
          }
          case 26: {
            if (observationPeriod_ == null) {
              ObservationPeriod = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Period();
            }
            input.ReadMessage(ObservationPeriod);
            break;
          }
          case 34: {
            if (product_ == null) {
              Product = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.ProductType();
            }
            input.ReadMessage(Product);
            break;
          }
          case 42: {
            if (meteringPointCharacteristic_ == null) {
              MeteringPointCharacteristic = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.DetailMeasurementMeteringPointCharacteristic();
            }
            input.ReadMessage(MeteringPointCharacteristic);
            break;
          }
          case 50: {
            MeteringPointDomainLocation = input.ReadString();
            break;
          }
          case 58: {
            observations_.AddEntriesFrom(input, _repeated_observations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 18: {
            Function = input.ReadString();
            break;
          }
          case 26: {
            if (observationPeriod_ == null) {
              ObservationPeriod = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.Period();
            }
            input.ReadMessage(ObservationPeriod);
            break;
          }
          case 34: {
            if (product_ == null) {
              Product = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.ProductType();
            }
            input.ReadMessage(Product);
            break;
          }
          case 42: {
            if (meteringPointCharacteristic_ == null) {
              MeteringPointCharacteristic = new global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Types.DetailMeasurementMeteringPointCharacteristic();
            }
            input.ReadMessage(MeteringPointCharacteristic);
            break;
          }
          case 50: {
            MeteringPointDomainLocation = input.ReadString();
            break;
          }
          case 58: {
            observations_.AddEntriesFrom(ref input, _repeated_observations_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Timeseries message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Period : pb::IMessage<Period>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Period> _parser = new pb::MessageParser<Period>(() => new Period());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Period> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Period() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Period(Period other) : this() {
          resolution_ = other.resolution_;
          start_ = other.start_ != null ? other.start_.Clone() : null;
          end_ = other.end_ != null ? other.end_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Period Clone() {
          return new Period(this);
        }

        /// <summary>Field number for the "Resolution" field.</summary>
        public const int ResolutionFieldNumber = 1;
        private string resolution_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Resolution {
          get { return resolution_; }
          set {
            resolution_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Start" field.</summary>
        public const int StartFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp start_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Start {
          get { return start_; }
          set {
            start_ = value;
          }
        }

        /// <summary>Field number for the "End" field.</summary>
        public const int EndFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp end_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp End {
          get { return end_; }
          set {
            end_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Period);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Period other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Resolution != other.Resolution) return false;
          if (!object.Equals(Start, other.Start)) return false;
          if (!object.Equals(End, other.End)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Resolution.Length != 0) hash ^= Resolution.GetHashCode();
          if (start_ != null) hash ^= Start.GetHashCode();
          if (end_ != null) hash ^= End.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Resolution.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Resolution);
          }
          if (start_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Start);
          }
          if (end_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(End);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Resolution.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Resolution);
          }
          if (start_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Start);
          }
          if (end_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(End);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Resolution.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Resolution);
          }
          if (start_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
          }
          if (end_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Period other) {
          if (other == null) {
            return;
          }
          if (other.Resolution.Length != 0) {
            Resolution = other.Resolution;
          }
          if (other.start_ != null) {
            if (start_ == null) {
              Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            Start.MergeFrom(other.Start);
          }
          if (other.end_ != null) {
            if (end_ == null) {
              End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            End.MergeFrom(other.End);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Resolution = input.ReadString();
                break;
              }
              case 18: {
                if (start_ == null) {
                  Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Start);
                break;
              }
              case 26: {
                if (end_ == null) {
                  End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(End);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Resolution = input.ReadString();
                break;
              }
              case 18: {
                if (start_ == null) {
                  Start = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Start);
                break;
              }
              case 26: {
                if (end_ == null) {
                  End = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(End);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ProductType : pb::IMessage<ProductType>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProductType> _parser = new pb::MessageParser<ProductType>(() => new ProductType());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProductType> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProductType() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProductType(ProductType other) : this() {
          identification_ = other.identification_;
          unitType_ = other.unitType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProductType Clone() {
          return new ProductType(this);
        }

        /// <summary>Field number for the "Identification" field.</summary>
        public const int IdentificationFieldNumber = 1;
        private string identification_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Identification {
          get { return identification_; }
          set {
            identification_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "UnitType" field.</summary>
        public const int UnitTypeFieldNumber = 2;
        private string unitType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UnitType {
          get { return unitType_; }
          set {
            unitType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProductType);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProductType other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Identification != other.Identification) return false;
          if (UnitType != other.UnitType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Identification.Length != 0) hash ^= Identification.GetHashCode();
          if (UnitType.Length != 0) hash ^= UnitType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Identification.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Identification);
          }
          if (UnitType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(UnitType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Identification.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Identification);
          }
          if (UnitType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(UnitType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Identification.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Identification);
          }
          if (UnitType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProductType other) {
          if (other == null) {
            return;
          }
          if (other.Identification.Length != 0) {
            Identification = other.Identification;
          }
          if (other.UnitType.Length != 0) {
            UnitType = other.UnitType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Identification = input.ReadString();
                break;
              }
              case 18: {
                UnitType = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Identification = input.ReadString();
                break;
              }
              case 18: {
                UnitType = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DetailMeasurementMeteringPointCharacteristic : pb::IMessage<DetailMeasurementMeteringPointCharacteristic>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DetailMeasurementMeteringPointCharacteristic> _parser = new pb::MessageParser<DetailMeasurementMeteringPointCharacteristic>(() => new DetailMeasurementMeteringPointCharacteristic());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DetailMeasurementMeteringPointCharacteristic> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DetailMeasurementMeteringPointCharacteristic() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DetailMeasurementMeteringPointCharacteristic(DetailMeasurementMeteringPointCharacteristic other) : this() {
          typeOfMeteringPoint_ = other.typeOfMeteringPoint_;
          settlementMethod_ = other.settlementMethod_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DetailMeasurementMeteringPointCharacteristic Clone() {
          return new DetailMeasurementMeteringPointCharacteristic(this);
        }

        /// <summary>Field number for the "TypeOfMeteringPoint" field.</summary>
        public const int TypeOfMeteringPointFieldNumber = 1;
        private string typeOfMeteringPoint_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeOfMeteringPoint {
          get { return typeOfMeteringPoint_; }
          set {
            typeOfMeteringPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "SettlementMethod" field.</summary>
        public const int SettlementMethodFieldNumber = 2;
        private string settlementMethod_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SettlementMethod {
          get { return settlementMethod_; }
          set {
            settlementMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DetailMeasurementMeteringPointCharacteristic);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DetailMeasurementMeteringPointCharacteristic other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeOfMeteringPoint != other.TypeOfMeteringPoint) return false;
          if (SettlementMethod != other.SettlementMethod) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeOfMeteringPoint.Length != 0) hash ^= TypeOfMeteringPoint.GetHashCode();
          if (SettlementMethod.Length != 0) hash ^= SettlementMethod.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TypeOfMeteringPoint.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeOfMeteringPoint);
          }
          if (SettlementMethod.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(SettlementMethod);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TypeOfMeteringPoint.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeOfMeteringPoint);
          }
          if (SettlementMethod.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(SettlementMethod);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeOfMeteringPoint.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeOfMeteringPoint);
          }
          if (SettlementMethod.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SettlementMethod);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DetailMeasurementMeteringPointCharacteristic other) {
          if (other == null) {
            return;
          }
          if (other.TypeOfMeteringPoint.Length != 0) {
            TypeOfMeteringPoint = other.TypeOfMeteringPoint;
          }
          if (other.SettlementMethod.Length != 0) {
            SettlementMethod = other.SettlementMethod;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeOfMeteringPoint = input.ReadString();
                break;
              }
              case 18: {
                SettlementMethod = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TypeOfMeteringPoint = input.ReadString();
                break;
              }
              case 18: {
                SettlementMethod = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Observation : pb::IMessage<Observation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Observation> _parser = new pb::MessageParser<Observation>(() => new Observation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Observation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Observation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Observation(Observation other) : this() {
          position_ = other.position_;
          quantity_ = other.quantity_;
          missing_ = other.missing_;
          quality_ = other.quality_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Observation Clone() {
          return new Observation(this);
        }

        /// <summary>Field number for the "Position" field.</summary>
        public const int PositionFieldNumber = 1;
        private int position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        /// <summary>Field number for the "Quantity" field.</summary>
        public const int QuantityFieldNumber = 2;
        private double quantity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Quantity {
          get { return quantity_; }
          set {
            quantity_ = value;
          }
        }

        /// <summary>Field number for the "Missing" field.</summary>
        public const int MissingFieldNumber = 3;
        private bool missing_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Missing {
          get { return missing_; }
          set {
            missing_ = value;
          }
        }

        /// <summary>Field number for the "Quality" field.</summary>
        public const int QualityFieldNumber = 4;
        private string quality_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Quality {
          get { return quality_; }
          set {
            quality_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Observation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Observation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Position != other.Position) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Quantity, other.Quantity)) return false;
          if (Missing != other.Missing) return false;
          if (Quality != other.Quality) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Position != 0) hash ^= Position.GetHashCode();
          if (Quantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Quantity);
          if (Missing != false) hash ^= Missing.GetHashCode();
          if (Quality.Length != 0) hash ^= Quality.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Position != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Position);
          }
          if (Quantity != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Quantity);
          }
          if (Missing != false) {
            output.WriteRawTag(24);
            output.WriteBool(Missing);
          }
          if (Quality.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Quality);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Position != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Position);
          }
          if (Quantity != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Quantity);
          }
          if (Missing != false) {
            output.WriteRawTag(24);
            output.WriteBool(Missing);
          }
          if (Quality.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Quality);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Position != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Position);
          }
          if (Quantity != 0D) {
            size += 1 + 8;
          }
          if (Missing != false) {
            size += 1 + 1;
          }
          if (Quality.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Quality);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Observation other) {
          if (other == null) {
            return;
          }
          if (other.Position != 0) {
            Position = other.Position;
          }
          if (other.Quantity != 0D) {
            Quantity = other.Quantity;
          }
          if (other.Missing != false) {
            Missing = other.Missing;
          }
          if (other.Quality.Length != 0) {
            Quality = other.Quality;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Position = input.ReadInt32();
                break;
              }
              case 17: {
                Quantity = input.ReadDouble();
                break;
              }
              case 24: {
                Missing = input.ReadBool();
                break;
              }
              case 34: {
                Quality = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Position = input.ReadInt32();
                break;
              }
              case 17: {
                Quantity = input.ReadDouble();
                break;
              }
              case 24: {
                Missing = input.ReadBool();
                break;
              }
              case 34: {
                Quality = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class TimeseriesCollection : pb::IMessage<TimeseriesCollection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeseriesCollection> _parser = new pb::MessageParser<TimeseriesCollection>(() => new TimeseriesCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeseriesCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpikeProtobuf.Implementations.Protobuf.ContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeseriesCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeseriesCollection(TimeseriesCollection other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeseriesCollection Clone() {
      return new TimeseriesCollection(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SpikeProtobuf.Implementations.Protobuf.Timeseries> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::SpikeProtobuf.Implementations.Protobuf.Timeseries.Parser);
    private readonly pbc::RepeatedField<global::SpikeProtobuf.Implementations.Protobuf.Timeseries> items_ = new pbc::RepeatedField<global::SpikeProtobuf.Implementations.Protobuf.Timeseries>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SpikeProtobuf.Implementations.Protobuf.Timeseries> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeseriesCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeseriesCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeseriesCollection other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
