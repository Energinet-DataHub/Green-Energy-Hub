name: Postoffice HttpTrigger Function Deploy

on:
  workflow_dispatch: {}

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/postoffice/httpTrigger'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1'              # set this to the dotnet version to use

jobs:

  build-and-deploy-function:
    name: Build and deploy function
    runs-on: ubuntu-latest
    steps:
      
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@master

      - name: Read Pipeline Configuration
        uses: ./.github/actions/read-pipeline-configuration

      - name: Read Client Secret
        env:
          SECRET_NAME: CLIENT_SECRET_${{ env.UPPERCASE_ENV_NAME }}
        run: |  
          echo "ARM_CLIENT_SECRET=${{ secrets[env.SECRET_NAME] }}" >> $GITHUB_ENV

      - name: Get Function Name
        run: |  
          echo "AZURE_FUNCTIONAPP_NAME=postoffice${{ env.ENV_NAME }}" >> $GITHUB_ENV

      - name: Configure Azure CLI
        uses: ./.github/actions/azure-cli-install-login

      - name: Get Function Publish Profile
        id: get-publish-profile
        run: |
          publish_profile=$(az webapp deployment list-publishing-profiles --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} --subscription ${{ env.ARM_SUBSCRIPTION_ID }} --xml)
          echo "::set-output name=publish-profile::${publish_profile}"

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}